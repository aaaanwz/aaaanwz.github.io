<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>自宅サーバー on A4 tech note</title>
    <link>https://aaaanwz.github.io/categories/%E8%87%AA%E5%AE%85%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC/</link>
    <description>Recent content in 自宅サーバー on A4 tech note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 04 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://aaaanwz.github.io/categories/%E8%87%AA%E5%AE%85%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetesに写真サーバーを構築する</title>
      <link>https://aaaanwz.github.io/post/2022/piwigo/</link>
      <pubDate>Tue, 04 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2022/piwigo/</guid>
      <description>2021年6月1日からGoogle Photoの容量が無制限ではなくなり、無料枠は15GBに制限されてしまいました。
完全に音楽サーバーを構築した話の二番煎じですが、自宅k8sに写真サーバーを構築してそちらに移行する事にしました。
デプロイ self-hostedな写真サーバーで最もメジャーなプロダクトはPiwigoの模様。
サクっとyamlを書いてデプロイします。
deployment.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56  apiVersion: apps/v1 kind: Deployment metadata: name: piwigo spec: replicas: 1 selector: matchLabels: app: piwigo template: metadata: labels: app: piwigo spec: containers: - name: piwigo image: lscr.</description>
    </item>
    
    <item>
      <title>おうちKubernetesに音楽ストリーミングサーバー(兼ファイルサーバー)を構築する</title>
      <link>https://aaaanwz.github.io/post/2021/airsonic/</link>
      <pubDate>Thu, 02 Dec 2021 07:00:00 +0900</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2021/airsonic/</guid>
      <description>神(Google)は「Play Music」と言われた。するとGoogle Play Musicがあった。
神はそのUXを見て、良しとされた。
神はまた言われた。「YouTube Musicに移行してください」
UIは使いづらく、バックグラウンド再生できず、ロードは遅くなり、楽曲メタデータは編集できなくなった。
神はお休みになった。
概要 所有している音楽データをアップロードし、インターネット経由で聴くというサービスでしっくりくるものがないため、自宅Kubernetesクラスタに自前で構築してみます。
 家庭内LANからファイルサーバーとして使える ファイルサーバーにアップロードした音楽データをインターネット経由で聴ける ファイルサイズが大きい楽曲はサーバーサイドでリアルタイムに圧縮して配信する  という要件から、以下のような構成にしてみます。
 音楽配信サーバーには Airsonicを使います  Ingress(L7ロードバランサー)経由でインターネットに接続します IngressをTLS終端にします   ファイルサーバーとしてSambaを構築します  Airsonicとストレージを共有します LoadBalancer Service(L4ロードバランサー)経由で家庭内LANに接続し、インターネットからは遮断します    構築 1. Storage まず初めに、Podからホストマシンのストレージを使うためのPersistentVolume(PV)とPersistentVolumeClaim(PVC)を作成します。 今回は node1 の /mnt/hdd に音楽データとメタデータ(設定、アカウント情報など)を永続化するとします。
pv.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62  apiVersion: v1 kind: PersistentVolume metadata: name: music spec: capacity: storage: 1000Gi accessModes: - ReadWriteOnce local: path: /mnt/hdd/music nodeAffinity: required: nodeSelectorTerms: - matchExpressions: - key: kubernetes.</description>
    </item>
    
  </channel>
</rss>
