<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kafka on A4 tech note</title><link>https://aaaanwz.github.io/categories/kafka/</link><description>Recent content in kafka on A4 tech note</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright> @aaaanwz コンテンツを引用される際は当ブログのURLを併記してください</copyright><lastBuildDate>Fri, 07 Jun 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://aaaanwz.github.io/categories/kafka/index.xml" rel="self" type="application/rss+xml"/><item><title>Kafka Streams DSLを一通り体験する (3. ステートフル処理実践編)</title><link>https://aaaanwz.github.io/post/2019/kafkastreams-3/</link><pubDate>Fri, 07 Jun 2019 00:00:00 +0000</pubDate><guid>https://aaaanwz.github.io/post/2019/kafkastreams-3/</guid><description>Kafka Streams DSLのうち、ステートフルな操作(join,reduce,aggregate,windowingなど)を実際に触り、動作を確認します。 ま</description></item><item><title>Kafka Streams DSLを一通り体験する (2. ステートレス処理実践編)</title><link>https://aaaanwz.github.io/post/2019/kafkastreams-2/</link><pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate><guid>https://aaaanwz.github.io/post/2019/kafkastreams-2/</guid><description>Kafka Streams DSLのうち、ステートレスな操作(branch,map,mergeなど)を実際に触り、動作を確認します。 また最後に、本稿で登場する関数を</description></item><item><title>Kafka Streams DSLを一通り体験する(1. 準備編)</title><link>https://aaaanwz.github.io/post/2019/kafkastreams-1/</link><pubDate>Tue, 04 Jun 2019 00:00:00 +0000</pubDate><guid>https://aaaanwz.github.io/post/2019/kafkastreams-1/</guid><description>Kafka Streamsを使ってステートフルなストリーム処理を実装したいと思い立ったものの、Kafka Streams Developer guideを読んでもいまいちよくわからなか</description></item></channel></rss>