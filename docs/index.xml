<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A4 tech note</title>
    <link>https://aaaanwz.github.io/</link>
    <description>Recent content on A4 tech note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>	aaaanwz all rights reserved.&lt;br&gt;コンテンツを引用される際は当ブログのURLを併記してください</copyright>
    <lastBuildDate>Sun, 21 Nov 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://aaaanwz.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ubuntu desktop初期設定メモ</title>
      <link>https://aaaanwz.github.io/post/2021/ubuntu-desktop-config/</link>
      <pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2021/ubuntu-desktop-config/</guid>
      <description>M1 Macに移行する気になれなかったのでメインマシンをx86 + Ubuntu Desktopにしました。 IME切り替えショートカットの設定 設定 &amp;gt; 地域と言語 &amp;gt;</description>
    </item>
    
    <item>
      <title>ArgoCD GitOpsにおけるSecret管理</title>
      <link>https://aaaanwz.github.io/post/2021/argocd-vault-plugin/</link>
      <pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2021/argocd-vault-plugin/</guid>
      <description>KubernetesでGitOps運用となると必ず話題になるのがSecretの管理です。 Sealed Secretsやkubesecなどの手元で暗号化す</description>
    </item>
    
    <item>
      <title>Argo Workflowsの失敗時にデフォルトでSlackに通知する</title>
      <link>https://aaaanwz.github.io/post/2021/argo-workflows-exit-handler/</link>
      <pubDate>Fri, 29 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2021/argo-workflows-exit-handler/</guid>
      <description>Argo workflowsでは Default Workflow Spec を設定する事でワークフローに色々とパッチできる。 以下のようにexit-handlerをworkflowDefa</description>
    </item>
    
    <item>
      <title>embulkをArgo workflowsで実行するTemplate</title>
      <link>https://aaaanwz.github.io/post/2021/argo-workflows-embulk/</link>
      <pubDate>Thu, 28 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2021/argo-workflows-embulk/</guid>
      <description>Argo Workflowsの公式ドキュメントが分かりづらかったので、試しにembulkを実行するテンプレートを作ってみました。 config.yml</description>
    </item>
    
    <item>
      <title>[fluetd] S3にアップロードされたキー名でルーティングする</title>
      <link>https://aaaanwz.github.io/post/2021/fluentd-s3-routing/</link>
      <pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2021/fluentd-s3-routing/</guid>
      <description>S3にアップロードされたファイルをfluentdでBigQueryにinsertする際、S3キー名に応じてテーブルを振り分けるサンプルを掲載</description>
    </item>
    
    <item>
      <title>kubectl logsに任意のログを表示する</title>
      <link>https://aaaanwz.github.io/post/2021/kubectl-logs/</link>
      <pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2021/kubectl-logs/</guid>
      <description>kubectl logsはPID1の標準出力を表示するため、直接書き込んでしまえばなんでも表示できる。 1 2 3 $ kubectl exec -it pod-xxx bash # echo &amp;#39;show as stdin&amp;#39; &amp;gt; /proc/1/fd/1 # echo &amp;#39;show as stderr&amp;#39; &amp;gt; /proc/1/fd/2 1 2 3</description>
    </item>
    
    <item>
      <title>VSCode Remote ContainerからGitHubにssh接続する</title>
      <link>https://aaaanwz.github.io/post/2021/vscode-remote-container-ssh/</link>
      <pubDate>Thu, 02 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2021/vscode-remote-container-ssh/</guid>
      <description>公式ドキュメントの Sharing Git credentials with your containerに色々と記載があるが、非常に簡単なソリューションがあったためメモ Mac 1 2 3 4 5 $ sudo vi ~/.ssh/config Host github.com AddKeysToAgent yes UseKeychain</description>
    </item>
    
    <item>
      <title>自作キーボードYMDK/SP64ビルドログ</title>
      <link>https://aaaanwz.github.io/post/2021/keyboard-sp64/</link>
      <pubDate>Sat, 26 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2021/keyboard-sp64/</guid>
      <description>標準的な配列の分割キーボードをようやく見つけたためAliExpressで購入。 PCBは予めソケット化されており、差し込むだけで完成なので組み</description>
    </item>
    
    <item>
      <title>Airflowで後続のOperatorに配列を渡す</title>
      <link>https://aaaanwz.github.io/post/2021/airflow-xcom/</link>
      <pubDate>Thu, 20 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2021/airflow-xcom/</guid>
      <description>Apache AirflowにおいてOperator間で値を渡すにはXCOMを使用しますが、 Airflow macroで文字列として取得する PythonOperato</description>
    </item>
    
    <item>
      <title>KubernetesのCronJobからJobを手動作成する</title>
      <link>https://aaaanwz.github.io/post/2020/k8s-cron-rerun/</link>
      <pubDate>Mon, 30 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2020/k8s-cron-rerun/</guid>
      <description>1 kubectl create job 作成するJob名 --from=cronjob/CronJob名 https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#-em-job-em-</description>
    </item>
    
    <item>
      <title>terraform非対応リソースをlocal-execで管理する</title>
      <link>https://aaaanwz.github.io/post/2020/terraform-local-exec/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2020/terraform-local-exec/</guid>
      <description>terraformに対応していないクラウドリソースを local-exec を用いてterraform化してみます。 今回はBigQueryのユーザー定義関数(UD</description>
    </item>
    
    <item>
      <title>GCPでカスタムロールをサービスアカウントにbindingしようとしてエラーになる場合</title>
      <link>https://aaaanwz.github.io/post/2020/gcp-serviceaccount-error/</link>
      <pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2020/gcp-serviceaccount-error/</guid>
      <description>1 2 3 4 $ gcloud projects add-iam-policy-binding myproject --member=serviceAccount:myserviceaccount@myproject.iam.gserviceaccount.com --role=&amp;#39;roles/mycustomrole&amp;#39; ERROR: Policy modification failed. For a binding with condition, run &amp;#34;gcloud alpha iam policies lint-condition&amp;#34; to identify issues in condition. ERROR: (gcloud.projects.add-iam-policy-binding) INVALID_ARGUMENT: Role roles/mycustomrole is not supported for this resource. --role の指定を roles/mycustomrole ではなく projects/myproject</description>
    </item>
    
    <item>
      <title>自作キーボード JJ50 ビルドログ</title>
      <link>https://aaaanwz.github.io/post/2020/keyboard-jj50/</link>
      <pubDate>Sun, 23 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2020/keyboard-jj50/</guid>
      <description>HHKB Professionalを終のキーボードにしようと思っていましたが、 長時間コーディングをしていると小指が痛くなる なんだかんだ矢印キーは欲し</description>
    </item>
    
    <item>
      <title>BigQueryで重複レコードを削除するSQL</title>
      <link>https://aaaanwz.github.io/post/2020/bigquery-deduplication/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2020/bigquery-deduplication/</guid>
      <description>オペミスやat-least-onceセマンティクスによってINSERTされてしまった重複レコードを消すSQLです。 完全に同一な重複レコードを</description>
    </item>
    
    <item>
      <title>Apache beam サンプルコード</title>
      <link>https://aaaanwz.github.io/post/2020/apache-beam-example/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2020/apache-beam-example/</guid>
      <description>Apache beamのJava quickstartがいまいち分かりづらかったため、最小コードとデプロイ手順(Google Cloud Dataflow, AWS EMR)を備忘録としてま</description>
    </item>
    
    <item>
      <title>CircleCIでDeploy Keyを用いて別のprivate repoをcloneする</title>
      <link>https://aaaanwz.github.io/post/2019/circleci-deploy-key/</link>
      <pubDate>Thu, 28 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2019/circleci-deploy-key/</guid>
      <description>ssh-keygenコマンドで公開鍵/秘密鍵を生成する 公開鍵(id_rsa.pub)をGitHubのDeploy keyに登録する 秘密鍵(id</description>
    </item>
    
    <item>
      <title>Github ActionsでAWS Lambdaにデプロイする</title>
      <link>https://aaaanwz.github.io/post/2019/github-actions-lambda-deploy/</link>
      <pubDate>Thu, 28 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2019/github-actions-lambda-deploy/</guid>
      <description>GitHubでreleaseが作成された時、Lambdaにコードを反映させバージョンを更新するワークフローの単純な実装です サンプルディレクト</description>
    </item>
    
    <item>
      <title>mavenプロジェクト作成からCIOps構築まで</title>
      <link>https://aaaanwz.github.io/post/2019/java-create-maven-project/</link>
      <pubDate>Wed, 24 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2019/java-create-maven-project/</guid>
      <description>git branchに変更が加わった際、 JUnit test (with MySQL) docker build Kubernetes環境にデプロイ (CIOps) が行われるJavaプロジェクトを構築します。 本番運用ではA</description>
    </item>
    
    <item>
      <title>Kubernetes Liveness ProbeでJavaプロセスを監視する</title>
      <link>https://aaaanwz.github.io/post/2019/java-k8s-liveness-probe/</link>
      <pubDate>Tue, 02 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2019/java-k8s-liveness-probe/</guid>
      <description>Javaプロセスを一定時間毎にチェックし、ハングしていればPodを再起動する仕組みの備忘録です。 Kubernetes LivenessProbeに関する詳細はこ</description>
    </item>
    
    <item>
      <title>Javaで文字コードを推測する</title>
      <link>https://aaaanwz.github.io/post/2019/juniversalchardet/</link>
      <pubDate>Thu, 27 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2019/juniversalchardet/</guid>
      <description>juniversalchardetを使用して、 ファイルの文字コードを推測・デコード・コンソールへの表示を行う URLエンコードされた文字列をデ</description>
    </item>
    
    <item>
      <title>Kafka Streams DSLを一通り体験する (3. ステートフル処理実践編)</title>
      <link>https://aaaanwz.github.io/post/2019/kafkastreams-3/</link>
      <pubDate>Fri, 07 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2019/kafkastreams-3/</guid>
      <description>Kafka Streams DSLのうち、ステートフルな操作(join,reduce,aggregate,windowingなど)を実際に触り、動作を確認します。 ま</description>
    </item>
    
    <item>
      <title>Kafka Streams DSLを一通り体験する (2. ステートレス処理実践編)</title>
      <link>https://aaaanwz.github.io/post/2019/kafkastreams-2/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2019/kafkastreams-2/</guid>
      <description>Kafka Streams DSLのうち、ステートレスな操作(branch,map,mergeなど)を実際に触り、動作を確認します。 また最後に、本稿で登場する関数を</description>
    </item>
    
    <item>
      <title>Kafka Streams DSLを一通り体験する(1. 準備編)</title>
      <link>https://aaaanwz.github.io/post/2019/kafkastreams-1/</link>
      <pubDate>Tue, 04 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2019/kafkastreams-1/</guid>
      <description>Kafka Streamsを使ってステートフルなストリーム処理を実装したいと思い立ったものの、Kafka Streams Developer guideを読んでもいまいちよくわからなか</description>
    </item>
    
    <item>
      <title></title>
      <link>https://aaaanwz.github.io/portfolio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/portfolio/</guid>
      <description>TBD</description>
    </item>
    
  </channel>
</rss>