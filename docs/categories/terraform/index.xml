<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>terraform on A4 tech note</title>
    <link>https://aaaanwz.github.io/categories/terraform/</link>
    <description>Recent content in terraform on A4 tech note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 20 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://aaaanwz.github.io/categories/terraform/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Airflowで後続のOperatorに配列を渡す</title>
      <link>https://aaaanwz.github.io/post/2021/airflow-xcom/</link>
      <pubDate>Thu, 20 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2021/airflow-xcom/</guid>
      <description>Apache AirflowにおいてOperator間で値を渡すにはXCOMを使用しますが、
 Airflow macroで文字列として取得する PythonOperatorでtask_instanceから取得する  の2通りの方法があります。
しかし、例えば
GoogleCloudStorageListOperatorでファイルのリストを取得 &amp;raquo; GoogleCloudStorageToBigQueryOperator でリストされたファイルをBigQueryにロードする
といったことをやりたい場合、XCOMからファイルのリストを配列として取得しコンストラクタに渡さなければならないためすこし工夫が必要になります。 本稿ではその実装について記載します。
NG 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  ... list_files = GoogleCloudStorageListOperator( task_id=&amp;#39;list_files&amp;#39;, bucket=&amp;#39;my_bucket&amp;#39;, prefix=&amp;#39;path/to/file/&amp;#39;, xcom_push=True, dag=dag ) gcs_to_bigquery = GoogleCloudStorageToBigQueryOperator( task_id=&amp;#39;gcs_to_bigquery&amp;#39;, bucket=&amp;#39;my_bucket&amp;#39;, source_objects=&amp;#34;{{ ti.xcom_pull(task_ids=&amp;#39;list_files&amp;#39;) }}&amp;#34;, destination_project_dataset_table=&amp;#39;project:dataset.table&amp;#39;, autodetect=True, dag=dag ) list_files &amp;gt;&amp;gt; gcs_to_bigquery ...   ファイル名の配列がデシリアライズされた状態で source_objects に渡されてしまうため動作しません。</description>
    </item>
    
    <item>
      <title>terraform非対応リソースをlocal-execで管理する</title>
      <link>https://aaaanwz.github.io/post/2020/terraform-local-exec/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://aaaanwz.github.io/post/2020/terraform-local-exec/</guid>
      <description>terraformに対応していないクラウドリソースを local-exec を用いてterraform化してみます。 今回はBigQueryのユーザー定義関数(UDF)でやってみます。
実装 さて早速。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  variable project{} resource &amp;#34;null_resource&amp;#34; &amp;#34;bigquery-udf&amp;#34; { &amp;lt;-#1  triggers = { query = &amp;#34;CREATE OR REPLACE FUNCTION my_dataset.TEST_FUNCTION(x INT64) AS (x + 1);&amp;#34; &amp;lt;-#2  } provisioner &amp;#34;local-exec&amp;#34; { &amp;lt;-#3  interpreter = [&amp;#34;bq&amp;#34;, &amp;#34;query&amp;#34;, &amp;#34;--use_legacy_sql=false&amp;#34;, &amp;#34;--project_id=${var.project}&amp;#34;] &amp;lt;-#4  command = self.triggers.query on_failure = fail &amp;lt;-#5  } provisioner &amp;#34;local-exec&amp;#34; { when = destroy &amp;lt;-#6  interpreter = [&amp;#34;bq&amp;#34;, &amp;#34;query&amp;#34;, &amp;#34;--use_legacy_sql=false&amp;#34;, &amp;#34;--project_id=${var.</description>
    </item>
    
  </channel>
</rss>
